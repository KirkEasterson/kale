---
# TODO: dnf and zypper (linux)
- name: "Bootstrap machine setup"
  hosts: "localhost"

  tasks:
    - name: "Timeshift"
      ansible.builtin.import_role:
        name: "timeshift"

    # - ensure package managers and tools are installed
    # - update package mangers
    #   - AUR (if arch)
    #   - homebrew (if mac)
    #   - npm (all)
    #   - pip (all)
    - name: "Package managers"
      ansible.builtin.import_role:
        name: "package_managers"

    # - change shell to zsh
    - name: "Zsh"
      ansible.builtin.import_role:
        name: "zsh"

    # - create ssh key and upload it to github
    - name: "Github"
      ansible.builtin.import_role:
        name: "github"

    # - ensure directory layout
    - name: "Directories"
      ansible.builtin.import_role:
        name: "directories"

    # - ensure git repos are cloned and install
    #   - dotfiles
    #   - global_configs (TODO: remove this repo and move files here)
    #   - scripts
    - name: "Git repos"
      ansible.builtin.import_role:
        name: "git_repos"

      # TODO: performance things
      #   - https://gist.github.com/lbrame/1678c00213c2bd069c0a59f8733e0ee6
    #       - also need `intel-media-driver`

    - name: "Fonts"
      ansible.builtin.import_role:
        name: "fonts"

    # - add user to necessary groups
    # TODO: this but for each program installed

    # - change system preferences
    #   - `default` command (in mac)
    #   - locale (linux)
    #   - grub (linux)
    #   - plymouth (linux)
    #   - systemd (linux)
    #   - xorg (linux)
    #   - lightdm (linux)
    - name: "Mac setup"
      ansible.builtin.import_role:
        name: "mac_default"
      when: "ansible_distribution == 'MacOSX'"

    - name: "Intel drivers"
      ansible.builtin.import_role:
        name: "intel"
      when: "ansible_system == 'Linux'"

    - name: "Power profiles"
      ansible.builtin.import_role:
        name: "power"
      when: "ansible_system == 'Linux'"

    - name: "Networking"
      ansible.builtin.import_role:
        name: "networking"
      when: "ansible_system == 'Linux'"

    - name: "Audio"
      ansible.builtin.import_role:
        name: "audio"
      when: "ansible_system == 'Linux'"

    - name: "Locale"
      ansible.builtin.import_role:
        name: "locale"
      when: "ansible_system == 'Linux'"

    - name: "Grub"
      ansible.builtin.import_role:
        name: "grub"
      when: "ansible_system == 'Linux'"

    - name: "Brightness"
      ansible.builtin.import_role:
        name: "brightness"
      when: "ansible_system == 'Linux'"

    - name: "Plymouth"
      ansible.builtin.import_role:
        name: "plymouth"
      when: "ansible_system == 'Linux'"

    - name: "Systemd"
      ansible.builtin.import_role:
        name: "systemd"
      when: "ansible_system == 'Linux'"

    - name: "Polkit"
      ansible.builtin.import_role:
        name: "polkit"
      when: "ansible_system == 'Linux'"

    - name: "Xorg"
      ansible.builtin.import_role:
        name: "xorg"
      when: "ansible_system == 'Linux'"

    - name: "Themes"
      ansible.builtin.import_role:
        name: "themes"
      when: "ansible_system == 'Linux'"

    - name: "Virtual machines"
      ansible.builtin.import_role:
        name: "virt_machines"

    - name: "LLMs"
      ansible.builtin.import_role:
        name: "llm"

    - name: "Login managers"
      ansible.builtin.import_role:
        name: "login_manager"
      when: "ansible_system == 'Linux'"

      # TODO: set up lock events in locker https://www.baeldung.com/linux/screen-lock-close-laptop-lid
    - name: "Locker"
      ansible.builtin.import_role:
        name: "locker"
      when: "ansible_system == 'Linux'"

    - name: "Programs"
      ansible.builtin.import_role:
        name: "programs"
