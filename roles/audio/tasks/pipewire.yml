---
# TODO: see what more conf needs to be done for ubuntu
- name: Remove conflicting program on pacman
  become: true
  community.general.pacman:
    state: absent
    name:
      - pulseaudio
      - pipewire-media-session
  when: ansible_facts['os_family'] == "Archlinux"

- name: Remove conflicting program on apt
  become: true
  ansible.builtin.apt:
    state: absent
    name:
      - pulseaudio
      - pipewire-media-session
  when: ansible_facts['os_family'] == "Debian"

- name: Disable pulseaudio service
  become: true
  ansible.builtin.systemd_service:
    name: "pulseaudio.service"
    enabled: false
    state: "stopped"
    masked: true
  failed_when: false

- name: Disable pulseaudio socket
  become: true
  ansible.builtin.systemd_service:
    name: "pulseaudio.socket"
    enabled: false
    state: "stopped"
    masked: true
  failed_when: false

- name: Install pipewire on pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - helvum # GTK patch bay
      - pipewire
      - pipewire-audio
      - pipewire-docs
      - pipewire-pulse
      - pipewire-x11-bell
      # - qpwgraph # QT patch bay
      - sof-firmware
      - wireplumber
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install pipewire on apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - helvum # GTK patch bay
      - pipewire
      - pipewire-audio
      - pipewire-docs
      - pipewire-pulse
      - pipewire-x11-bell
      # - qpwgraph # QT patch bay
      - sof-firmware
      - wireplumber
  when: ansible_facts['os_family'] == "Debian"

- name: Add current user to the audio group
  become: true
  ansible.builtin.user:
    name: "{{ remote_regular_user }}"
    groups: audio
    append: true

- name: Add current user to the video group
  become: true
  ansible.builtin.user:
    name: "{{ remote_regular_user }}"
    groups: video
    append: true

- name: Enable pipewire service
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.systemd_service:
    scope: "user"
    state: "started"
    name: "pipewire.service"
    enabled: true

- name: Enable pipewire-pulse service
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.systemd_service:
    scope: "user"
    state: "started"
    name: "pipewire-pulse"
    enabled: true

- name: Enable wireplumber service
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.systemd_service:
    scope: "user"
    state: "started"
    name: "wireplumber"
    enabled: true
