---
# TODO: see what more conf needs to be done for ubuntu
- name: Remove conflicting program on pacman
  become: true
  pacman:
    state: absent
    name:
      - pulseaudio
      - pipewire-media-session
  when: ansible_facts['os_family'] == "Archlinux"

- name: Remove conflicting program on apt
  become: true
  apt:
    state: absent
    name:
      - pulseaudio
      - pipewire-media-session
  when: ansible_facts['os_family'] == "Debian"

- name: Disable pulseaudio service
  become: true
  ansible.builtin.systemd_service:
    name: "pulseaudio.service"
    enabled: false
    state: "stopped"
    masked: true
  failed_when: false

- name: Disable pulseaudio socket
  become: true
  ansible.builtin.systemd_service:
    name: "pulseaudio.socket"
    enabled: false
    state: "stopped"
    masked: true
  failed_when: false

- name: Install pipewire on pacman
  become: true
  pacman:
    state: present
    name:
      - helvum # GTK patch bay
      - pipewire
      - pipewire-audio
      - pipewire-docs
      - pipewire-pulse
      - pipewire-x11-bell
      # - qpwgraph # QT patch bay
      - sof-firmware
      - wireplumber
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install pipewire on apt
  become: true
  apt:
    install_recommends: no
    name:
      - helvum # GTK patch bay
      - pipewire
      - pipewire-audio
      - pipewire-docs
      - pipewire-pulse
      - pipewire-x11-bell
      # - qpwgraph # QT patch bay
      - sof-firmware
      - wireplumber
  when: ansible_facts['os_family'] == "Debian"

- name: Add current user to the audio group
  become: true
  user:
    name: "{{ remote_regular_user }}"
    groups: audio
    append: yes

- name: Add current user to the video group
  become: true
  user:
    name: "{{ remote_regular_user }}"
    groups: video
    append: yes

# TODO: figure out why these files don't exist on a fresh install. Maybe the service has to be started?
- name: Copy ALSA configuration file
  become: true
  ansible.builtin.copy:
    src: ../files/99-pipewire-default.conf
    dest: /etc/alsa/conf.d/99-pipewire-default.conf
  when: ansible_facts['os_family'] == "Ubuntu"

- name: Copy JACK configuration files
  become: true
  copy:
    src: "{{ item }}"
    dest: /usr/share/doc/pipewire/examples/ld.so.conf.d/
  with_fileglob:
    - pipewire-jack-*.conf
  when: ansible_facts['os_family'] == "Ubuntu"

- name: Run ldconfig
  become: true
  shell: ldconfig
  when: ansible_facts['os_family'] == "Ubuntu"

- name: Enable pipewire service
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.systemd_service:
    scope: "user"
    state: "started"
    name: "pipewire.service"
    enabled: true

- name: Enable pipewire-pulse service
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.systemd_service:
    scope: "user"
    state: "started"
    name: "pipewire-pulse"
    enabled: true

- name: Enable wireplumber service
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.systemd_service:
    scope: "user"
    state: "started"
    name: "wireplumber"
    enabled: true

- name: Install general audio tools on pacman
  become: true
  pacman:
    state: present
    name:
      - "easyeffects"
      - "lsp-plugins"
      - "playerctl"
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install general audio tools on apt
  become: true
  apt:
    install_recommends: no
    name:
      - "playerctl"
  when: ansible_facts['os_family'] == "Debian"
