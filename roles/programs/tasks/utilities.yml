---
- name: Install vpn from AUR
  become: true
  become_user: "{{ remote_regular_user }}"
  kewlfft.aur.aur:
    state: present
    use: yay
    name:
      - nordvpn-bin
      - nordtray-bin
  when: ansible_facts['os_family'] == "Archlinux"

# - name: Install vpn from apt
#   become: true
#   ansible.builtin.apt:
#     install_recommends: false
#     name:
#       - nordvpn
#   when: ansible_facts['os_family'] == "Debian"

- name: Install vpn from homebrew
  community.general.homebrew:
    state: present
    name:
      - homebrew/cask/nordvpn
  when: ansible_facts['os_family'] == "Darwin"

- name: Install password manager from AUR
  become: true
  become_user: "{{ remote_regular_user }}"
  kewlfft.aur.aur:
    state: present
    use: yay
    name:
      - 1password
      - 1password-cli
  when: ansible_facts['os_family'] == "Archlinux"

# - name: Install password manager from apt
#   become: true
#   ansible.builtin.apt:
#     install_recommends: no
#     name:
#       - 1password
#   when: ansible_facts['os_family'] == "Debian"

- name: Install password manager from homebrew
  community.general.homebrew:
    state: present
    name:
      - homebrew/cask/1password
      - homebrew/cask/1password-cli
  when: ansible_facts['os_family'] == "Darwin"

- name: Install multi-monitor tools from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - arandr
      - autorandr
      - xorg-xrandr
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install multi-monitor tools from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - arandr
      - autorandr
      - xrandr
  when: ansible_facts['os_family'] == "Debian"
