---
- name: "Install c/cpp"
  become: true
  ansible.builtin.package:
    name:
      - "clang"
      - "cmake"
      - "gcc"
      - "gdb"
      - "llvm"
      - "make"
      - "valgrind"

- name: "Install golang"
  become: true
  vars:
    golang:
      Archlinux: "go"
      Debian: "golang-go"
      Darwin: "go"
  ansible.builtin.package:
    name:
      - "{{ golang[ansible_facts['os_family']] }}"

- name: "Install rust"
  become: true
  vars:
    rust:
      Archlinux: "rustup"
      Debian: "rustc"
      Darwin: "rust"
  ansible.builtin.package:
    name:
      - "{{ rust[ansible_facts['os_family']] }}"

- name: "Set default for rustup"
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.command:
    cmd: "rustup default stable"
  changed_when: false

- name: "Install dotnet from pacman"
  become: true
  community.general.pacman:
    state: "present"
    name:
      - "aspnet-runtime"
      - "aspnet-targeting-pack"
      - "dotnet-host"
      - "dotnet-runtime"
      - "dotnet-sdk"
      - "dotnet-targeting-pack"
  when: "ansible_facts['os_family'] == 'Archlinux'"

- name: "Install dotnet from apt"
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - "aspnetcore-runtime-8.0"
      - "dotnet-host-8.0"
      - "dotnet-runtime-8.0"
      - "dotnet-sdk-8.0"
      - "dotnet-targeting-pack-8.0"
  when: "ansible_facts['os_family'] == 'Debian'"

- name: "Install dotnet from homebrew"
  community.general.homebrew:
    state: "present"
    name:
      - "homebrew/cask/dotnet"
      - "homebrew/cask/dotnet-sdk"
  when: "ansible_facts['os_family'] == 'Darwin'"

- name: "Install python"
  become: true
  ansible.builtin.package:
    name:
      - "python3"

- name: "Install java/kotlin"
  become: true
  vars:
    openjdk:
      Archlinux: "jdk-openjdk"
      Debian: "openjdk-21-jdk"
      Darwin: "openjdk"
  ansible.builtin.package:
    name:
      - "kotlin"
      - "{{ openjdk[ansible_facts['os_family']] }}"

- name: "Install zig"
  become: true
  ansible.builtin.package:
    name:
      - "zig"

- name: "Install ocaml"
  become: true
  vars:
    dune:
      Archlinux: "dune"
      Debian: "ocaml-dune"
      Darwin: "dune"
  ansible.builtin.package:
    name:
      - "ocaml"
      - "ocamlbuild"
      - "opam"
      - "{{ dune[ansible_facts['os_family']] }}"
  register: "install_ocaml"

- name: "Initialize opam" # noqa: no-handler
  become: true
  become_user: "{{ remote_regular_user }}"
  ansible.builtin.command:
    cmd: "opam init -y"
  when: "install_ocaml.changed"
  changed_when: false

- name: "Install JS/TS/node"
  become: true
  vars:
    ts:
      Archlinux: "typescript"
      Debian: "node-typescript"
      Darwin: "typescript"
  ansible.builtin.package:
    name:
      - "nodejs"
      - "{{ ts[ansible_facts['os_family']] }}"

- name: "Install linters"
  become: true
  ansible.builtin.package:
    name:
      - "ansible-lint"
      - "yamllint"

- name: "Install molecule"
  become: true
  ansible.builtin.package:
    name:
      - "molecule"

# TODO: install opentofu too
- name: "Install terraform"
  become: true
  ansible.builtin.package:
    name:
      - "terraform"

- name: "Install misc things"
  become: true
  ansible.builtin.package:
    name:
      - "composer"
      - "julia"
      - "php"
      - "ruby"
      - "tree-sitter"
      - "tree-sitter-cli"
