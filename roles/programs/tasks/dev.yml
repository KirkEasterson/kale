---
- name: Install c/cpp tools from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - clang
      - gcc
      - gdb
      - llvm
      - make
      - valgrind
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install c/cpp tools from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - clang
      - gcc
      - gdb
      - llvm
      - make
      - valgrind
  when: ansible_facts['os_family'] == "Debian"

- name: Install c/cpp tools from homebrew
  community.general.homebrew:
    state: present
    name:
      # - clang
      - gcc
      - gdb
      - llvm
      - make
      - valgrind
  when: ansible_distribution == "MacOSX"

- name: Install golang from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - go
      - gofumpt
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install golang tools from AUR
  become: true
  kewlfft.aur.aur:
    state: present
    use: yay
    name:
      - golangci-lint-bin
      - golines

- name: Install golang from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - golang-go
  when: ansible_facts['os_family'] == "Debian"

- name: Install golang from homebrew
  community.general.homebrew:
    state: present
    name:
      - go
      - gofumpt
      - golangci-lint
  when: ansible_facts['os_family'] == "Darwin"

- name: Install rust from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - rust
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install rust from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - rustc
  when: ansible_facts['os_family'] == "Debian"

- name: Install rust from homebrew
  community.general.homebrew:
    state: present
    name:
      - rust
  when: ansible_facts['os_family'] == "Darwin"

- name: Install dotnet from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - aspnet-runtime
      - aspnet-targeting-pack
      - dotnet-host
      - dotnet-runtime
      - dotnet-sdk
      - dotnet-targeting-pack
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install dotnet from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - dotnet
  when: ansible_facts['os_family'] == "Debian"

- name: Install dotnet from homebrew
  community.general.homebrew:
    state: present
    name:
      - homebrew/cask/dotnet
      - homebrew/cask/dotnet-sdk
  when: ansible_facts['os_family'] == "Darwin"

- name: Install python from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - pyright
      - python
      - python-black
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install python from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - black
      # - pyright
      - python3
  when: ansible_facts['os_family'] == "Debian"

- name: Install python from homebrew
  community.general.homebrew:
    state: present
    name:
      - black
      - pyright
      # - python3
  when: ansible_facts['os_family'] == "Darwin"

- name: Install java/kotlin from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - jdk-openjdk
      - kotlin
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install java/kotlin from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - kotlin
      - openjdk-17-jdk
  when: ansible_facts['os_family'] == "Debian"

- name: Install java/kotlin from homebrew
  community.general.homebrew:
    state: present
    name:
      - kotlin
      - openjdk
  when: ansible_facts['os_family'] == "Darwin"

- name: Install zig from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - zig
  when: ansible_facts['os_family'] == "Archlinux"

# - name: Install zig from apt
#   become: true
#   ansible.builtin.apt:
#     install_recommends: false
#     name:
#       - zig
#   when: ansible_facts['os_family'] == "Debian"

- name: Install zig from homebrew
  community.general.homebrew:
    state: present
    name:
      - zig
  when: ansible_facts['os_family'] == "Darwin"

- name: Install ocaml from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - ocaml
      - ocamlbuild
      - opam
      - dune
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install ocaml from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - ocaml
      - ocamlbuild
      - ocaml-core
      - ocaml-dune
      - opam
  when: ansible_facts['os_family'] == "Debian"

- name: Install ocaml from homebrew
  community.general.homebrew:
    state: present
    name:
      - dune
      - ocaml
      - ocamlbuild
      - opam
  when: ansible_facts['os_family'] == "Darwin"

- name: Install javascript/typescript from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - nodejs
      - typescript
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install javascript/typescript from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - node-typescript
      - nodejs
  when: ansible_facts['os_family'] == "Debian"

- name: Install javascript/typescript from homebrew
  community.general.homebrew:
    state: present
    name:
      - node
      - typescript
  when: ansible_facts['os_family'] == "Darwin"

- name: Install molecule from pacman
  become: true
  community.general.pacman:
    state: present
    name:
      - molecule
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install molecule from apt
  become: true
  ansible.builtin.apt:
    install_recommends: false
    name:
      - molecule
  when: ansible_facts['os_family'] == "Debian"

- name: Install molecule from homebrew
  community.general.homebrew:
    state: present
    name:
      - molecule
  when: ansible_facts['os_family'] == "Darwin"
