---
- name: Install vpn
  hosts: localhost
  become: true

  tasks:
    - name: Install vpn from AUR
      become: true
      become_user: aur_builder
      kewlfft.aur.aur:
        state: present
        use: yay
        name:
          - nordvpn-bin
          - nordtray-bin

    # - name: Install vpn from apt
    #   become: true
    #   apt:
    #     install_recommends: no
    #     name:
    #       - nordvpn
    #   when: ansible_os_family == 'Debian'

    - name: Install vpn from homebrew
      homebrew:
        state: present
        name:
          - homebrew/cask/nordvpn
      when: ansible_distribution == "MacOSX"

# TODO: move away from 1password
- name: Install password manager
  hosts: localhost
  become: true

  tasks:
    - name: Install password manager from AUR
      become: true
      become_user: aur_builder
      kewlfft.aur.aur:
        state: present
        use: yay
        name:
          - 1password
          - 1password-cli

    # - name: Install password manager from apt
    #   become: true
    #   apt:
    #     install_recommends: no
    #     name:
    #       - 1password
    #   when: ansible_os_family == 'Debian'

    - name: Install password manager from homebrew
      homebrew:
        state: present
        name:
          - homebrew/cask/1password
          - homebrew/cask/1password-cli
      when: ansible_distribution == "MacOSX"

- name: Install multi-monitor tools
  hosts: localhost
  become: true

  tasks:
    - name: Install multi-monitor tools from AUR
      become: true
      pacman:
        state: present
        name:
          - arandr
          - autorandr
          - xrandr
      when: ansible_distribution == 'ArchLinux'

    - name: Install multi-monitor tools from apt
      become: true
      apt:
        install_recommends: no
        name:
          - arandr
          - autorandr
          - xrandr
      when: ansible_os_family == 'Debian'

    # - name: Install multi-monitor tools from homebrew
    #   homebrew:
    #     state: present
    #     name:
    #       - arandr
    #       - autorandr
    #       - xrandr
    #   when: ansible_distribution == "MacOSX"
