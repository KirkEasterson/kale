---
- name: "Install timeshift"
  become: true
  ansible.builtin.package:
    name:
      - "grub-btrfs"
      - "inotify-tools"
      - "timeshift"

- name: "Check if grub-btrfs conf file exists"
  ansible.builtin.stat:
    path: "/etc/default/grub-btrfs/config"
  register: "grub_btrfs_conf"

- name: "Copy grub-btrfs conf file"
  become: true
  ansible.builtin.copy:
    src: "files/grub-btrfs/config"
    dest: "/etc/default/grub-btrfs/config"
    mode: "644"
  when: "not grub_btrfs_conf.stat.exists or grub_btrfs_conf.stat.checksum != ansible_checksum"
  vars:
    ansible_checksum: "{{ lookup('file', 'files/grub-btrfs/config') | checksum }}"
  register: "conf_updated"

- name: "Enable cronie service"
  become: true
  ansible.builtin.systemd:
    name: "cronie"
    enabled: true
    state: "started"

- name: "Enable grub-btrfsd service"
  become: true
  ansible.builtin.systemd:
    name: "grub-btrfsd"
    enabled: true
    state: "started"

- name: "Insert 'timeshift-auto' if missing"
  become: true
  ansible.builtin.replace:
    path: "/etc/systemd/system/grub-btrfsd.service"
    regexp: "^(ExecStart=.*) /.snapshots$"
    replace: "\\1 --timeshift-auto"
  register: "timeshift_param"

- name: "Restart grub-btrfsd service"
  become: true
  ansible.builtin.systemd:
    name: "grub-btrfsd"
    enabled: true
    state: "restarted"
  when: "timeshift_param.changed"

- name: "Update grub"
  become: true
  become_user: "root"
  ansible.builtin.command:
    cmd: "grub-mkconfig -o /boot/grub/grub.cfg"
  when: "ansible_facts['os_family'] != 'Suse' and (timeshift_param.changed or conf_updated.changed)"
  changed_when: false

- name: "Update grub2"
  become: true
  become_user: "root"
  ansible.builtin.command:
    cmd: "grub2-mkconfig -o /boot/grub/grub.cfg"
  when: "ansible_facts['os_family'] == 'Suse' and (timeshift_param.changed or conf_updated.changed)"
  changed_when: false
