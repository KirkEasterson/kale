---
- name: "Add autorandr repository"
  become: true
  community.general.zypper_repository:
    repo: "https://download.opensuse.org/repositories/home:phillipberndt/openSUSE_Tumbleweed/home:phillipberndt.repo"
    state: "present"
    runrefresh: true
  when: "ansible_facts['os_family'] == 'Suse'"

- name: "Install xorg"
  become: true
  vars:
    xorgserver:
      Archlinux: "xorg-server"
      Debian: "xserver-xorg"
      Suse: "xorg-x11-server"
    xhost:
      Archlinux: "xorg-xhost"
      Debian: "x11-server-utils" # this contains xhost
      Suse: "xhost"
    xinit:
      Archlinux: "xorg-xinit"
      Debian: "xinit"
      Suse: "xinit"
    xinput:
      Archlinux: "xorg-xinput"
      Debian: "xinput"
      Suse: "xinput"
    xrandr:
      Archlinux: "xorg-xrandr"
      Debian: "xrandr"
      Suse: "xrandr"
    xwayland:
      Archlinux: "xorg-xwayland"
      Debian: "xwayland"
      Suse: "xwayland"
  ansible.builtin.package:
    name:
      - "arandr"
      - "autorandr"
      - "xf86-input-libinput"
      - "xf86-input-synaptics"
      - "xorg-xkbutils"
      - "{{ xorgserver[ansible_facts['os_family']] }}"
      - "{{ xinit[ansible_facts['os_family']] }}"
      - "{{ xhost[ansible_facts['os_family']] }}"
      - "{{ xinput[ansible_facts['os_family']] }}"
      - "{{ xrandr[ansible_facts['os_family']] }}"
      - "{{ xwayland[ansible_facts['os_family']] }}"

- name: "Check if libinput conf exists"
  ansible.builtin.stat:
    path: "/etc/X11/xorg.conf.d/40-libinput.conf"
  register: "libinput_conf"

- name: "Update libinput conf"
  become: true
  ansible.builtin.copy:
    src: "files/40-libinput.conf"
    dest: "/etc/X11/xorg.conf.d/40-libinput.conf"
    mode: "644"
  when: "not libinput_conf.stat.exists or libinput_conf.stat.checksum != ansible_checksum"
  vars:
    ansible_checksum: "{{ lookup('file', 'files/40-libinput.conf') | checksum }}"

- name: "Check if synaptics conf exists"
  ansible.builtin.stat:
    path: "/etc/X11/xorg.conf.d/70-synaptics.conf"
  register: "synaptics_conf"

- name: "Update synaptics conf"
  become: true
  ansible.builtin.copy:
    src: "files/70-synaptics.conf"
    dest: "/etc/X11/xorg.conf.d/70-synaptics.conf"
    mode: "644"
  when: "not synaptics_conf.stat.exists or synaptics_conf.stat.checksum != ansible_checksum"
  vars:
    ansible_checksum: "{{ lookup('file', 'files/70-synaptics.conf') | checksum }}"

- name: "Add current user to the input group"
  become: true
  ansible.builtin.user:
    name: "{{ remote_regular_user }}"
    groups: "input"
    append: true

- name: "Add current user to the uinput group"
  become: true
  ansible.builtin.user:
    name: "{{ remote_regular_user }}"
    groups: "uinput"
    append: true

- name: "Check if uinput rules exists"
  ansible.builtin.stat:
    path: "/usr/lib/udev/rules.d/93-uinput.rules"
  register: "uinput_conf"

- name: "Copy uinput udev rules"
  become: true
  ansible.builtin.copy:
    src: "files/93-uinput.rules"
    dest: "/usr/lib/udev/rules.d/93-uinput.rules"
    mode: "644"
  when: "not uinput_conf.stat.exists or uinput_conf.stat.checksum != ansible_checksum"
  vars:
    ansible_checksum: "{{ lookup('file', 'files/93-uinput.rules') | checksum }}"

- name: "Ensure uinput drivers are loaded"
  become: true
  ansible.builtin.command:
    cmd: "modprobe uinput"
  when: "not uinput_conf.stat.exists"
  changed_when: false
