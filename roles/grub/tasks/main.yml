---
- name: "Set GRUB timeout to 0"
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/default/grub"
    regexp: "^GRUB_TIMEOUT="
    line: "GRUB_TIMEOUT=0"
  register: "grub_timeout"

- name: "Set GRUB default to 0"
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/default/grub"
    regexp: "^GRUB_DEFAULT="
    line: "GRUB_DEFAULT=0"
  register: "grub_default"

- name: "Check if 'quiet' is configured in the boot command"
  become: true
  ansible.builtin.lineinfile:
    backup: true
    path: "/etc/default/grub"
    regexp: '^GRUB_CMDLINE_LINUX=".*quiet'
    state: "absent"
  check_mode: true
  register: "quiet_param"
  changed_when: false

- name: "Insert 'quiet' if missing"
  become: true
  ansible.builtin.lineinfile:
    backrefs: true
    path: "/etc/default/grub"
    regexp: '^(GRUB_CMDLINE_LINUX=".*)"$'
    line: '\1 quiet"'
  when: "not quiet_param.found"

- name: "Check if 'splash' is configured in the boot command"
  become: true
  ansible.builtin.lineinfile:
    backup: true
    path: "/etc/default/grub"
    regexp: '^GRUB_CMDLINE_LINUX=".*splash'
    state: "absent"
  check_mode: true
  register: "splash_param"
  changed_when: false

- name: "Insert 'splash' if missing"
  become: true
  ansible.builtin.lineinfile:
    backrefs: true
    path: "/etc/default/grub"
    regexp: '^(GRUB_CMDLINE_LINUX=".*)"$'
    line: '\1 splash"'
  when: "not splash_param.found"

- name: "Check if 'intel pstate' is configured in the boot command"
  become: true
  ansible.builtin.lineinfile:
    backup: true
    path: "/etc/default/grub"
    regexp: '^GRUB_CMDLINE_LINUX=".*intel_pstate=enable'
    state: "absent"
  check_mode: true
  register: "intel_pstate_param"
  changed_when: false

- name: "Insert 'intel pstate' if missing"
  become: true
  ansible.builtin.lineinfile:
    backrefs: true
    path: "/etc/default/grub"
    regexp: '^(GRUB_CMDLINE_LINUX=".*)"$'
    line: '\1 intel_pstate=enable"'
  when: "not intel_pstate_param.found"

- name: "Update grub"
  become: true
  become_user: "root"
  ansible.builtin.command:
    cmd: "grub-mkconfig -o /boot/grub/grub.cfg"
  when:
    "ansible_facts['os_family'] != 'Suse' and (grub_timeout.changed or grub_default.changed or not
    quiet_param.found or not splash_param.found or not intel_pstate_param.found)"
  changed_when: false

- name: "Update grub2"
  become: true
  become_user: "root"
  ansible.builtin.command:
    cmd: "grub2-mkconfig -o /boot/grub/grub.cfg"
  when:
    "ansible_facts['os_family'] == 'Suse' and (grub_timeout.changed or grub_default.changed or not
    quiet_param.found or not splash_param.found or not intel_pstate_param.found)"
  changed_when: false
# # TODO: figure out the arch equivalent for this
# - name: Update initramfs
#   become: true
#   become_user: root
#   shell:
#     cmd: update-initramfs -u
#   when: not quiet_param or not splash_param
#   changed_when: false
